    
//Note: the custom function should have "record_id" parameter
// getting record info from Leads or Quotes using the record_id
 
    quote_info = zoho.crm.getRecordById("Quotes", quote_id.toLong());
// Getting Box folder ID from the record info
    box_folder_id = quote_info.get("Box Folder ID");
   if ((box_folder_id == null) || (box_folder_id == ""))
   {
      rootFolderId = zoho.crm.getOrgVariable("box.box_rootfolder_id");
       if (rootFolderId == "")
        {
// Returning since the root folder ID is empty
            return;
        }
       tokenObj = map();
       tokenObj.put("folder_name", "Quotes");
       tokenObj.put("parent", rootFolderId);
// Using the token object and Box connector to call the invoke connector from CRM API
       createFlrResp = zoho.crm.invokeConnector("box.box.createboxfolder", tokenObj, true);
        if (createFlrResp == null){
return;
}
// Get the status code from the createFlrResp
        status_code = createFlrResp.get("status_code");
        quote_folder_id = "";
        resp_obj = createFlrResp.get("response");
// Checking for same folder name
        if (status_code == "409")
       {
            context_info = resp_obj.getJSON("context_info");
            conflict_ids = context_info.getJSON("conflicts").toJSONList();
            for each entry in conflict_ids
            {
                quote_folder_id = entry.getJSON("id");
            }
       }
// Returns the folder ID if these conditions satisfy
        else if ((status_code == "201") || (status_code == "200"))
        {
            quote_folder_id = resp_obj.getJSON("id");
        }
           if (quote_folder_id == "")
        {
            return;
        }
//Get the record name if folder ID exists
        first_name = quote_info.get("Subject");
tokenObj1 = map();
tokenObj1.put("folder_name", first_name);
tokenObj1.put("parent", quote_folder_id);
 
// Update the folder id and record name using API
 
createFlrResp1 = zoho.crm.invokeConnector("box.box.createboxfolder", tokenObj1, true);
status_code1 = createFlrResp1.get("status_code");
resp_obj1 = createFlrResp1.get("response");
rec_folder_id = "";
if (status_code1 == "409")
{
            context_info1 = resp_obj1.getJSON("context_info");
            conflict_ids1 = context_info1.getJSON("conflicts").toJSONList();
            for each entry1 in conflict_ids1
            {
                rec_folder_id = entry1.getJSON("id");
            }
         }
        else if ((status_code1 == "201") || (status_code1 == "200"))
        {
            rec_folder_id = resp_obj1.getJSON("id");
        }
        if (rec_folder_id != "")
{
            updateMap = map();
            updateMap.put("Box Folder ID", rec_folder_id);
// Update the Box folder ID using the CRM API
            update_resp = zoho.crm.updateRecord("Quotes", quote_id + "", updateMap);
}
return;
}
                                                              
